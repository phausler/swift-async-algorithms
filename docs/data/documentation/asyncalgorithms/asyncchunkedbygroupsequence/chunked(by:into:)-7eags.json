{
  "abstract" : [
    {
      "text" : "Creates an asynchronous sequence that creates chunks of a given ",
      "type" : "text"
    },
    {
      "code" : "RangeReplaceableCollection",
      "type" : "codeVoice"
    },
    {
      "text" : " type when a signal ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : " produces an element.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms",
        "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence",
        "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/AsyncSequence-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/chunked(by:into:)-7eags"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "_Concurrency",
    "externalID" : "s:Sci15AsyncAlgorithmsE7chunked2by4intoAA0A29ChunksOfCountOrSignalSequenceVyxqd_0_qd__Gqd___qd_0_mts8SendableRzsAHRd__SciRd__SmRd_0_sAH0A8IteratorSciRpzsAH7ElementSciRpzAKQyd_0_ALRSsAhISciRpd__sAhKSciRpd__r0_lF::SYNTHESIZED::s:15AsyncAlgorithms0A22ChunkedByGroupSequenceV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "chunked"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Signal"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "genericParameter",
        "text" : "Collected"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "by"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Signal"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "into"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Collected"
      },
      {
        "kind" : "text",
        "text" : ".Type) -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:15AsyncAlgorithms0A29ChunksOfCountOrSignalSequenceV",
        "text" : "AsyncChunksOfCountOrSignalSequence"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Self"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Collected"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Signal"
      },
      {
        "kind" : "text",
        "text" : ">"
      }
    ],
    "modules" : [
      {
        "name" : "AsyncAlgorithms"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "chunked(by:into:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "chunked"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "Collected"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "by"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "signal"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "into"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Collected"
            },
            {
              "kind" : "text",
              "text" : ".Type) -> "
            },
            {
              "identifier" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunksOfCountOrSignalSequence",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:15AsyncAlgorithms0A29ChunksOfCountOrSignalSequenceV",
              "text" : "AsyncChunksOfCountOrSignalSequence"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Collected"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sci",
              "text" : "AsyncSequence"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Collected"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:Sm",
              "text" : "RangeReplaceableCollection"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "AsyncIterator"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Self"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " == "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Collected"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "AsyncIterator"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Signal"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:s8SendableP",
              "text" : "Sendable"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:into:)-7eags"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://AsyncAlgorithms/documentation/AsyncAlgorithms": {
  "abstract" : [
    {
      "inlineContent" : [
        {
          "text" : "Swift Async Algorithms",
          "type" : "text"
        }
      ],
      "type" : "strong"
    },
    {
      "text" : " is an open-source package of asynchronous sequence and advanced algorithms that involve concurrency, along with their related types.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "AsyncAlgorithms",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms"
},
"doc://AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : " that chunks by testing if two elements belong to the same group.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncChunkedByGroupSequence"
    }
  ],
  "identifier" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncChunkedByGroupSequence"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncChunkedByGroupSequence",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence"
},
"doc://AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence/AsyncSequence-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/AsyncSequence-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "AsyncSequence Implementations",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/asyncsequence-implementations"
},
"doc://AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunkedByGroupSequence/chunked(by:into:)-7eags": {
  "abstract" : [
    {
      "text" : "Creates an asynchronous sequence that creates chunks of a given ",
      "type" : "text"
    },
    {
      "code" : "RangeReplaceableCollection",
      "type" : "codeVoice"
    },
    {
      "text" : " type when a signal ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : " produces an element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "chunked"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Signal"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "Collected"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "by"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Signal"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "into"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Collected"
    },
    {
      "kind" : "text",
      "text" : ".Type) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:15AsyncAlgorithms0A29ChunksOfCountOrSignalSequenceV",
      "text" : "AsyncChunksOfCountOrSignalSequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Collected"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Signal"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunkedByGroupSequence\/chunked(by:into:)-7eags",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "chunked(by:into:)",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchunkedbygroupsequence\/chunked(by:into:)-7eags"
},
"doc://AsyncAlgorithms/documentation/AsyncAlgorithms/AsyncChunksOfCountOrSignalSequence": {
  "abstract" : [
    {
      "text" : "An ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : " that chunks elements into collected ",
      "type" : "text"
    },
    {
      "code" : "RangeReplaceableCollection",
      "type" : "codeVoice"
    },
    {
      "text" : " instances by either count or a signal from another ",
      "type" : "text"
    },
    {
      "code" : "AsyncSequence",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AsyncChunksOfCountOrSignalSequence"
    }
  ],
  "identifier" : "doc:\/\/AsyncAlgorithms\/documentation\/AsyncAlgorithms\/AsyncChunksOfCountOrSignalSequence",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AsyncChunksOfCountOrSignalSequence"
    }
  ],
  "role" : "symbol",
  "title" : "AsyncChunksOfCountOrSignalSequence",
  "type" : "topic",
  "url" : "\/documentation\/asyncalgorithms\/asyncchunksofcountorsignalsequence"
}
}
}